{"ast":null,"code":"var _jsxFileName = \"/Users/yavam/Documents/famillia-app/frontend/src/Components/Store/insertVideos.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport ReactPlayer from \"react-player\"; // importa o componente ReactPlayer\nimport '../Styles/InsertVideos.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InsertVideos() {\n  _s();\n  // Cria uma referência para o input file\n  const fileInput = useRef(null);\n\n  // Cria um estado para o resultado\n  const [result, setResult] = useState(\"\");\n\n  // Cria um estado para a URL do vídeo\n  const [videoURL, setVideoURL] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"nome\", e.target.nome.value);\n    formData.append(\"video\", fileInput.current.files[0]);\n    formData.append(\"descricao\", e.target.descricao.value);\n    axios.post(\"http://localhost:8000/components/insertVideos.php\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(response => {\n      setResult(response.data);\n      // Limpa os campos após o envio\n      e.target.nome.value = \"\";\n      e.target.descricao.value = \"\";\n      fileInput.current.value = null;\n      setVideoURL(\"\"); // Limpa a URL do vídeo\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  // Define a função que será chamada ao mudar o input file\n  const handleFileChange = e => {\n    // Obtém o arquivo de vídeo selecionado\n    const file = e.target.files[0];\n\n    // Verifica se o navegador suporta o FileReader\n    if (window.FileReader) {\n      // Cria um objeto FileReader\n      const reader = new FileReader();\n\n      // Define a função que será chamada quando o arquivo for lido\n      reader.onload = event => {\n        // Obtém a URL base64 do arquivo\n        const url = event.target.result;\n\n        // Atualiza o estado com a URL do vídeo\n        setVideoURL(url);\n      };\n\n      // Lê o arquivo como uma URL base64\n      reader.readAsDataURL(file);\n    } else {\n      // Usa uma alternativa, como uma requisição AJAX\n      const xhr = new XMLHttpRequest();\n      xhr.open(\"GET\", file);\n      xhr.onload = () => {\n        // Obtém a URL base64 do arquivo\n        const url = xhr.responseText;\n\n        // Atualiza o estado com a URL do vídeo\n        setVideoURL(url);\n      };\n      xhr.send();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"VideoForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Selecione o v\\xEDdeo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 36\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"video\",\n        name: \"video\",\n        accept: \"video/*\",\n        ref: fileInput,\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"nome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"nome\",\n        name: \"nome\",\n        placeholder: \"Nome do v\\xEDdeo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"descricao\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        id: \"descricao\",\n        name: \"descricao\",\n        placeholder: \"Texto para descrever o v\\xEDdeo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"VideoPlayer\",\n      children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n        url: videoURL,\n        width: \"25\",\n        height: \"25\",\n        controls: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n_s(InsertVideos, \"+L6B0KKYJiFkg67W2EPgNjsfNy4=\");\n_c = InsertVideos;\nexport default InsertVideos;\nvar _c;\n$RefreshReg$(_c, \"InsertVideos\");","map":{"version":3,"names":["React","useRef","useState","axios","ReactPlayer","jsxDEV","_jsxDEV","InsertVideos","_s","fileInput","result","setResult","videoURL","setVideoURL","handleSubmit","e","preventDefault","formData","FormData","append","target","nome","value","current","files","descricao","post","headers","then","response","data","catch","error","console","handleFileChange","file","window","FileReader","reader","onload","event","url","readAsDataURL","xhr","XMLHttpRequest","open","responseText","send","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","name","accept","ref","onChange","placeholder","width","height","controls","_c","$RefreshReg$"],"sources":["/Users/yavam/Documents/famillia-app/frontend/src/Components/Store/insertVideos.jsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport ReactPlayer from \"react-player\"; // importa o componente ReactPlayer\nimport '../Styles/InsertVideos.css'\n\nfunction InsertVideos() {\n    // Cria uma referência para o input file\n    const fileInput = useRef(null);\n\n    // Cria um estado para o resultado\n    const [result, setResult] = useState(\"\");\n\n    // Cria um estado para a URL do vídeo\n    const [videoURL, setVideoURL] = useState(\"\");\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n    \n        const formData = new FormData();\n        formData.append(\"nome\", e.target.nome.value);\n        formData.append(\"video\", fileInput.current.files[0]);\n        formData.append(\"descricao\", e.target.descricao.value);\n    \n        axios\n            .post(\"http://localhost:8000/components/insertVideos.php\", formData, {\n                headers: {\n                    \"Content-Type\": \"multipart/form-data\",\n                },\n            })\n            .then((response) => {\n                setResult(response.data);\n                // Limpa os campos após o envio\n                e.target.nome.value = \"\";\n                e.target.descricao.value = \"\";\n                fileInput.current.value = null;\n                setVideoURL(\"\"); // Limpa a URL do vídeo\n            })\n            .catch((error) => {\n                console.error(error);\n            });\n    };\n    \n    // Define a função que será chamada ao mudar o input file\n    const handleFileChange = (e) => {\n        // Obtém o arquivo de vídeo selecionado\n        const file = e.target.files[0];\n\n        // Verifica se o navegador suporta o FileReader\n        if (window.FileReader) {\n            // Cria um objeto FileReader\n            const reader = new FileReader();\n\n            // Define a função que será chamada quando o arquivo for lido\n            reader.onload = (event) => {\n                // Obtém a URL base64 do arquivo\n                const url = event.target.result;\n\n                // Atualiza o estado com a URL do vídeo\n                setVideoURL(url);\n            };\n\n            // Lê o arquivo como uma URL base64\n            reader.readAsDataURL(file);\n        } else {\n            // Usa uma alternativa, como uma requisição AJAX\n            const xhr = new XMLHttpRequest();\n            xhr.open(\"GET\", file);\n            xhr.onload = () => {\n                // Obtém a URL base64 do arquivo\n                const url = xhr.responseText;\n\n                // Atualiza o estado com a URL do vídeo\n                setVideoURL(url);\n            };\n            xhr.send();\n        }\n    };\n\n\n    return (\n        <div className=\"VideoForm\"><h1>Selecione o vídeo</h1>\n            <form onSubmit={handleSubmit}>\n               \n                <label htmlFor=\"video\"></label>\n                <input type=\"file\" id=\"video\" name=\"video\" accept=\"video/*\" ref={fileInput} onChange={handleFileChange} />\n                <br />\n                <label htmlFor=\"nome\"></label>\n                <input type=\"text\" id=\"nome\" name=\"nome\" placeholder=\"Nome do vídeo\"/>\n                <br />\n                <label htmlFor=\"descricao\"></label>\n                <textarea type=\"text\" id=\"descricao\" name=\"descricao\" placeholder=\"Texto para descrever o vídeo\"></textarea> \n                <br />\n                <button type=\"submit\">Enviar</button>\n            </form>\n            <h3>{result}</h3>\n            <div className=\"VideoPlayer\">\n                <ReactPlayer url={videoURL} width=\"25\" height=\"25\" controls={true} />\n            </div>\n        </div>\n    );\n}\nexport default InsertVideos;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}