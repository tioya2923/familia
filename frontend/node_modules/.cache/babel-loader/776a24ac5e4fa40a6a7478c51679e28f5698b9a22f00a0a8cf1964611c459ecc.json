{"ast":null,"code":"var _jsxFileName = \"/Users/yavam/Documents/famillia-app/frontend/src/Components/Navigation/HomePages/updateAdministradores.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateAdministradores = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const getUsers = () => {\n    axios.get('https://familia-gouveia-0f628f261ee1.herokuapp.com/components/updateAdministradores.php').then(response => {\n      console.log(response.data);\n      if (Array.isArray(response.data)) {\n        setUsers(response.data);\n      } else {\n        console.error('Data is not an array');\n      }\n    }).catch(error => {\n      console.error(`There was an error retrieving the user list: ${error}`);\n    });\n  };\n\n  // Obter a lista de usuários quando o componente é montado\n  useEffect(() => {\n    getUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Adminstradores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"E-mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Data de Cria\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name_admin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email_admin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.created_at\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this)]\n        }, user.id_admin, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(UpdateAdministradores, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = UpdateAdministradores;\nexport default UpdateAdministradores;\nvar _c;\n$RefreshReg$(_c, \"UpdateAdministradores\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","UpdateAdministradores","_s","users","setUsers","getUsers","get","then","response","console","log","data","Array","isArray","error","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","name_admin","email_admin","created_at","id_admin","_c","$RefreshReg$"],"sources":["/Users/yavam/Documents/famillia-app/frontend/src/Components/Navigation/HomePages/updateAdministradores.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst UpdateAdministradores = () => {\n    const [users, setUsers] = useState([]);\n \n\n\n\n    const getUsers = () => {\n        axios.get('https://familia-gouveia-0f628f261ee1.herokuapp.com/components/updateAdministradores.php')\n            .then(response => {\n                console.log(response.data);\n                if (Array.isArray(response.data)) {\n                    setUsers(response.data);\n                } else {\n                    console.error('Data is not an array');\n                }\n            })\n            .catch(error => {\n                console.error(`There was an error retrieving the user list: ${error}`);\n            });\n    }\n\n    // Obter a lista de usuários quando o componente é montado\n    useEffect(() => {\n        getUsers();\n    }, []);\n\n    return (\n        <div>\n            <h2>Adminstradores</h2>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Nome</th>\n                        <th>E-mail</th> \n                        <th>Data de Criação</th>                       \n                        \n                    </tr>\n                </thead>\n                <tbody>\n                    {users.map(user => (\n                        <tr key={user.id_admin}>\n                            <td>{user.name_admin}</td>\n                            <td>{user.email_admin}</td>                         \n                            <td>{user.created_at}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default UpdateAdministradores;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}